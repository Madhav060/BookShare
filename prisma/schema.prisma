generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int              @id @default(autoincrement())
  name       String
  email      String           @unique
  password   String           // Stores bcrypt hash
  role       Role             @default(USER)
  createdAt  DateTime         @default(now())
  
  ownedBooks Book[]           @relation("OwnedBooks")
  heldBooks  Book[]           @relation("HeldBooks")
  requests   BorrowRequest[]  @relation("UserRequests")
}

model Book {
  id             Int              @id @default(autoincrement())
  title          String
  author         String
  status         BookStatus       @default(AVAILABLE)
  createdAt      DateTime         @default(now())
  
  owner          User             @relation("OwnedBooks", fields: [ownerId], references: [id])
  ownerId        Int
  
  holder         User             @relation("HeldBooks", fields: [userId], references: [id])
  userId         Int              // Initially same as ownerId
  
  borrowRequests BorrowRequest[]
}

model BorrowRequest {
  id         Int                  @id @default(autoincrement())
  status     BorrowRequestStatus  @default(PENDING)
  createdAt  DateTime             @default(now())
  
  book       Book                 @relation(fields: [bookId], references: [id])
  bookId     Int
  
  borrower   User                 @relation("UserRequests", fields: [borrowerId], references: [id])
  borrowerId Int
}

enum Role {
  USER
  DELIVERY_AGENT
  ADMIN
}

enum BookStatus {
  AVAILABLE
  BORROWED
}

enum BorrowRequestStatus {
  PENDING
  ACCEPTED
  REJECTED
  COMPLETED
}